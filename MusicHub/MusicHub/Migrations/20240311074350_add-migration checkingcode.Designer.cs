// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MusicHub.Data;

#nullable disable

namespace MusicHub.Migrations
{
    [DbContext(typeof(MusicHubDBContext))]
    [Migration("20240311074350_add-migration checkingcode")]
    partial class addmigrationcheckingcode
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MusicHub.Model.MusicCD", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Artist")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MusicCDs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Artist = "Artist A",
                            Genre = "Rock",
                            Price = 20m,
                            StockQuantity = 100,
                            Title = "Album1"
                        },
                        new
                        {
                            Id = 2,
                            Artist = "Artist B",
                            Genre = "POP",
                            Price = 15m,
                            StockQuantity = 75,
                            Title = "Ben Hits"
                        },
                        new
                        {
                            Id = 3,
                            Artist = "Artist C",
                            Genre = "Jazz",
                            Price = 25m,
                            StockQuantity = 50,
                            Title = "Jazz Fashion"
                        },
                        new
                        {
                            Id = 4,
                            Artist = "Artist D",
                            Genre = "Classical",
                            Price = 30m,
                            StockQuantity = 120,
                            Title = "Classic Fusion"
                        },
                        new
                        {
                            Id = 5,
                            Artist = "Artist E",
                            Genre = "Electronic",
                            Price = 18m,
                            StockQuantity = 80,
                            Title = "Electronic Beats"
                        });
                });

            modelBuilder.Entity("MusicHub.Model.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MusicCDId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MusicCDId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            MusicCDId = 1,
                            OrderDate = new DateTime(2024, 3, 5, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 2,
                            TotalPrice = 41m,
                            UserId = 101
                        },
                        new
                        {
                            Id = 2,
                            MusicCDId = 3,
                            OrderDate = new DateTime(2024, 3, 5, 11, 30, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 1,
                            TotalPrice = 25m,
                            UserId = 102
                        },
                        new
                        {
                            Id = 3,
                            MusicCDId = 2,
                            OrderDate = new DateTime(2024, 3, 5, 14, 20, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 3,
                            TotalPrice = 47m,
                            UserId = 103
                        },
                        new
                        {
                            Id = 4,
                            MusicCDId = 4,
                            OrderDate = new DateTime(2024, 2, 5, 15, 55, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 1,
                            TotalPrice = 30m,
                            UserId = 104
                        },
                        new
                        {
                            Id = 5,
                            MusicCDId = 5,
                            OrderDate = new DateTime(2024, 3, 5, 17, 10, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 2,
                            TotalPrice = 37m,
                            UserId = 105
                        });
                });

            modelBuilder.Entity("MusicHub.Model.Order", b =>
                {
                    b.HasOne("MusicHub.Model.MusicCD", "MusicCd")
                        .WithMany()
                        .HasForeignKey("MusicCDId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MusicCd");
                });
#pragma warning restore 612, 618
        }
    }
}
